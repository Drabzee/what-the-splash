{"version":3,"sources":["components/Header.jsx","constants/index.js","reducers/errorReducer.js","reducers/imagesReducer.js","reducers/loadingReducer.js","reducers/pageReducer.js","reducers/statsReducer.js","reducers/index.js","actions/index.js","api/index.js","sagas/imagesSaga.js","sagas/statsSaga.js","sagas/index.js","store/index.js","components/Stats.jsx","components/ImageGrid.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","IMAGES","STATS","errorReducer","state","action","type","error","imagesReducer","images","loadingReducer","pageReducer","statsReducer","id","isLoading","downloads","rootReducer","combineReducers","page","imageStats","setImages","loadImageStats","setImageStats","setImageStatsError","KEY","URL","fetchImages","a","axios","get","res","data","fetchImageStats","handleImagesLoad","watchImagesRequest","select","call","put","toString","takeEvery","handleStatsLoad","watchStatsRequest","stats","take","image","fork","f","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","run","Stats","className","total","connect","dispatch","loadImages","useEffect","map","Math","ceil","height","width","src","urls","small","alt","user","username","JSON","stringify","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAUeA,MARf,WACE,OACE,iCACE,qD,OCLOC,EACL,cADKA,EAEF,iBAFEA,EAGL,cAGKC,EACL,aADKA,EAEF,gBAFEA,EAGL,aCIOC,EAXM,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAOA,EAAOC,MACZ,KAAKL,EACL,KAAKA,EACH,MAAO,GACT,KAAKA,EACH,OAAOI,EAAOE,MAChB,QAAS,OAAOH,I,QCCLI,EARO,WAAyB,IAAxBJ,EAAuB,uDAAf,GAAIC,EAAW,uCAC5C,OAAOA,EAAOC,MACZ,KAAKL,EACH,MAAM,GAAN,mBAAYG,GAAZ,YAAsBC,EAAOI,SAC/B,QAAS,OAAOL,ICOLM,EAXQ,WAA4B,IAA3BN,EAA0B,wDAAXC,EAAW,uCAChD,OAAOA,EAAOC,MACZ,KAAKL,EACH,OAAO,EACT,KAAKA,EACL,KAAKA,EACH,OAAO,EACT,QAAS,OAAOG,ICCLO,EARK,WAAwB,IAAvBP,EAAsB,uDAAd,EAAGC,EAAW,uCACzC,OAAOA,EAAOC,MACZ,KAAKL,EACH,OAAOG,EAAQ,EACjB,QAAS,OAAOA,I,gBC6BLQ,EAjCM,WAAyB,IAAxBR,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAOA,EAAOC,MACZ,KAAKJ,EACH,OAAO,2BACFE,GADL,kBAEGC,EAAOQ,GAAK,CACXC,WAAW,EACXC,UAAW,KACXR,OAAO,KAGb,KAAKL,EACH,OAAO,2BACFE,GADL,kBAEGC,EAAOQ,GAAK,CACXC,WAAW,EACXC,UAAWV,EAAOU,UAClBR,OAAO,KAGb,KAAKL,EACH,OAAO,2BACFE,GADL,kBAEGC,EAAOQ,GAAK,CACXC,WAAW,EACXC,UAAW,KACXR,OAAO,KAGb,QAAS,OAAOH,IChBLY,EARKC,YAAgB,CAClCR,OAAQD,EACRD,MAAOJ,EACPW,UAAWJ,EACXQ,KAAMP,EACNQ,WAAYP,I,gCCNDQ,EAAY,SAACX,GAAD,MAAa,CACpCH,KAAML,EACNQ,WAQWY,EAAiB,SAAAR,GAAE,MAAK,CACnCP,KAAMJ,EACNW,OAGWS,EAAgB,SAACT,EAAIE,GAAL,MAAoB,CAC/CT,KAAMJ,EACNW,KACAE,cAGWQ,EAAqB,SAAAV,GAAE,MAAK,CACvCP,KAAMJ,EACNW,O,yBC3BIW,EAAM,8EACNC,EAAG,mCAEIC,EAAW,uCAAG,WAAOR,GAAP,eAAAS,EAAA,sEACPC,IAAMC,IAAN,UAAaJ,GAAb,OAAmBD,EAAnB,4BAA0CN,IADnC,cACnBY,EADmB,yBAElBA,EAAIC,MAFc,2CAAH,sDAKXC,EAAe,uCAAG,WAAOnB,GAAP,eAAAc,EAAA,sEACXC,IAAMC,IAAN,UAAaJ,EAAb,YAAoBZ,EAApB,sBAAoCW,IADzB,cACvBM,EADuB,yBAEtBA,EAAIC,MAFkB,2CAAH,sD,WCLlBE,G,WAUAC,GAVV,SAAUD,IAAV,yEAEiB,OAFjB,kBAEuBE,aAAO,SAAA/B,GAAK,OAAIA,EAAMc,QAF7C,OAGmB,OADTA,EAFV,gBAGyBkB,YAAKV,EAAaR,GAH3C,OAII,OADMT,EAHV,gBAIU4B,YAAIjB,EAAUX,IAJxB,+BAMI,OANJ,oCAMU4B,aFAe9B,EEAF,KAAI+B,WFAS,CAClChC,KAAML,EACNM,WERF,kCFMwB,IAACA,IENzB,iBAUA,SAAU2B,IAAV,iEACE,OADF,SACQK,YAAUtC,EAAagC,GAD/B,uCAIeC,Q,2BCdLM,G,WAUAC,GAVV,SAAUD,EAAgB3B,GAA1B,uEAEI,OAFJ,kBAEUwB,YAAIhB,EAAeR,IAF7B,OAGkB,OAHlB,SAGwBuB,YAAKJ,EAAiBnB,GAH9C,OAII,OADM6B,EAHV,gBAIUL,YAAIf,EAAcT,EAAI6B,EAAM3B,YAJtC,+BAMI,OANJ,oCAMUsB,YAAId,EAAmBV,IANjC,sDAUA,SAAU4B,IAAV,+EAEuB,OAFvB,SAE6BE,YAAK1C,GAFlC,gBAEYQ,EAFZ,EAEYA,OAFZ,cAIqBA,GAJrB,yDAKM,OADMmC,EAJZ,kBAKYC,YAAKL,EAAiBI,EAAM/B,IALxC,sHAAAiC,IAAA,gGAUeL,Q,WCrBLM,IAAV,SAAUA,KAAV,iEACE,OADF,SACQC,YAAI,CACRd,IACAO,MAHJ,uCAOeM,UCNTE,GAAiBC,cAEjBC,GAAQC,YACZpC,EACAqC,YACEC,YAAgBL,MAIpBA,GAAeM,IAAIR,IAEJI,UCDAK,GAbD,SAAC,GAAe,IAAbd,EAAY,EAAZA,MACb,OAAKA,EAID,uBAAMe,UAAU,QAAhB,UACKf,EAAMnC,OAAS,sBACfmC,EAAM5B,WAAa,0BACC,OAApB4B,EAAM3B,WAAN,uBAAkC2B,EAAM3B,UAAU2C,UANhD,sBAAMD,UAAU,QAAhB,yBCwCAE,gBARS,SAAC,GAAD,MAA6C,CACnElD,OADsB,EAAEA,OAChBK,UADc,EAAUA,UACbP,MADG,EAAqBA,MACjBY,WADJ,EAA4BA,eAIzB,SAACyC,GAAD,MAAe,CACxCC,WAAY,kBAAMD,EPvCa,CAC/BtD,KAAML,QOyCO0D,EAvCG,SAAC,GAA0D,IAAxDlD,EAAuD,EAAvDA,OAAQK,EAA+C,EAA/CA,UAAWP,EAAoC,EAApCA,MAAOsD,EAA6B,EAA7BA,WAAY1C,EAAiB,EAAjBA,WAMzD,OAJA2C,qBAAU,WACRD,MACC,CAACA,IAGF,sBAAKJ,UAAU,UAAf,UACE,yBAASA,UAAU,OAAnB,SACGhD,EAAOsD,KAAI,SAAAnB,GAAK,OACf,sBAEEa,UAAS,oBAAeO,KAAKC,KACzBrB,EAAMsB,OAAStB,EAAMuB,QAH3B,UAME,cAAC,GAAD,CAAOzB,MAAOvB,EAAWyB,EAAM/B,MAC/B,qBACIuD,IAAKxB,EAAMyB,KAAKC,MAChBC,IAAK3B,EAAM4B,KAAKC,aARf7B,EAAM/B,SAahBN,GAAS,qBAAKkD,UAAU,QAAf,SAAwBiB,KAAKC,UAAUpE,KAEjD,wBAAQqE,QAAS,kBAAO9D,GAAa+C,KAArC,+BCfSgB,OAXf,WACE,OACE,cAAC,IAAD,CAAU1B,MAAOA,GAAjB,SACE,sBAAKM,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,GAAD,UCEOqB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.d13f2740.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header() {\n  return (\n    <header>\n      <h1>What the Splash!</h1>\n    </header>\n  )\n}\n\nexport default Header\n","export const IMAGES = {\n  LOAD: 'IMAGES_LOAD',\n  SUCCESS: 'IMAGES_SUCCESS',\n  FAIL: 'IMAGES_FAIL'\n};\n\nexport const STATS = {\n  LOAD: 'STATS_LOAD',\n  SUCCESS: 'STATS_SUCCESS',\n  FAIL: 'STATS_FAIL'\n};","import { IMAGES } from '../constants';\n\nconst errorReducer = (state = '', action) => {\n  switch(action.type) {\n    case IMAGES.LOAD:\n    case IMAGES.SUCCESS:\n      return '';\n    case IMAGES.FAIL:\n      return action.error\n    default: return state;\n  }\n}\n\nexport default errorReducer;","import { IMAGES } from '../constants';\n\nconst imagesReducer = (state = [], action) => {\n  switch(action.type) {\n    case IMAGES.SUCCESS:\n      return [ ...state, ...action.images ];\n    default: return state;\n  }\n}\n\nexport default imagesReducer;","import { IMAGES } from '../constants';\n\nconst loadingReducer = (state = false, action) => {\n  switch(action.type) {\n    case IMAGES.LOAD:\n      return true;\n    case IMAGES.SUCCESS:\n    case IMAGES.FAIL:\n      return false;\n    default: return state;\n  }\n}\n\nexport default loadingReducer;","import { IMAGES } from '../constants';\n\nconst pageReducer = (state = 1, action) => {\n  switch(action.type) {\n    case IMAGES.SUCCESS:\n      return state + 1;\n    default: return state;\n  }\n}\n\nexport default pageReducer;","import { STATS } from '../constants';\n\nconst statsReducer = (state = {}, action) => {\n  switch(action.type) {\n    case STATS.LOAD:\n      return {\n        ...state,\n        [action.id]: {\n          isLoading: true,\n          downloads: null,\n          error: false\n        }\n      };\n    case STATS.SUCCESS:\n      return {\n        ...state,\n        [action.id]: {\n          isLoading: false,\n          downloads: action.downloads,\n          error: false\n        }\n      };\n    case STATS.FAIL:\n      return {\n        ...state,\n        [action.id]: {\n          isLoading: false,\n          downloads: null,\n          error: true\n        }\n      };\n    default: return state;\n  }\n}\n\nexport default statsReducer;","import { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport imagesReducer from './imagesReducer';\nimport loadingReducer from './loadingReducer';\nimport pageReducer from './pageReducer';\nimport statsReducer from './statsReducer';\n\nconst rootReducer = combineReducers({\n  images: imagesReducer,\n  error: errorReducer,\n  isLoading: loadingReducer,\n  page: pageReducer,\n  imageStats: statsReducer\n});\n\nexport default rootReducer;","import { IMAGES, STATS } from '../constants';\n\nexport const loadImages = () => ({\n  type: IMAGES.LOAD\n});\n\nexport const setImages = (images) => ({\n  type: IMAGES.SUCCESS,\n  images\n});\n\nexport const setError = (error) => ({\n  type: IMAGES.FAIL,\n  error\n});\n\nexport const loadImageStats = id => ({\n  type: STATS.LOAD,\n  id\n});\n\nexport const setImageStats = (id, downloads) => ({\n  type: STATS.SUCCESS,\n  id,\n  downloads\n});\n\nexport const setImageStatsError = id => ({\n  type: STATS.FAIL,\n  id\n});","import axios from 'axios';\n\nconst KEY = '?client_id=5f96323678d05ff0c4eb264ef184556868e303b32a2db88ecbf15746e6f25e02';\nconst URL = `https://api.unsplash.com/photos/`;\n\nexport const fetchImages = async (page) => {\n  const res = await axios.get(`${URL}${KEY}&per_page=3&page=${page}`);\n  return res.data;\n}\n\nexport const fetchImageStats = async (id) => {\n  const res = await axios.get(`${URL}/${id}/statistics${KEY}`);\n  return res.data;\n}","import { call, put, select, takeEvery } from 'redux-saga/effects';\nimport { setError, setImages } from '../actions';\nimport { fetchImages } from '../api';\nimport { IMAGES } from '../constants';\n\nfunction* handleImagesLoad() {\n  try {\n    const page = yield select(state => state.page);\n    const images = yield call(fetchImages, page);\n    yield put(setImages(images));\n  } catch(err) {\n    yield put(setError(err.toString()));\n  }\n}\n\nfunction* watchImagesRequest() {\n  yield takeEvery(IMAGES.LOAD, handleImagesLoad);\n}\n\nexport default watchImagesRequest;","import { call, fork, put, take } from \"@redux-saga/core/effects\";\nimport { loadImageStats, setImageStats, setImageStatsError } from \"../actions\";\nimport { fetchImageStats } from \"../api\";\nimport { IMAGES } from \"../constants\";\n\nfunction* handleStatsLoad(id) {\n  try {\n    yield put(loadImageStats(id));\n    const stats = yield call(fetchImageStats, id);\n    yield put(setImageStats(id, stats.downloads));\n  } catch(err) {\n    yield put(setImageStatsError(id));\n  }\n}\n\nfunction* watchStatsRequest() {\n  while(true) {\n    const { images } = yield take(IMAGES.SUCCESS);\n    \n    for(let image of images) {\n      yield fork(handleStatsLoad, image.id);\n    }\n  }\n}\n\nexport default watchStatsRequest;","import { all } from 'redux-saga/effects';\nimport watchImagesRequest from './imagesSaga';\nimport watchStatsRequest from './statsSaga';\n\nfunction* rootSaga() {\n  yield all([\n    watchImagesRequest(),\n    watchStatsRequest()\n  ]);\n}\n\nexport default rootSaga;","import { applyMiddleware, compose, createStore } from 'redux';\nimport rootReducer from '../reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(sagaMiddleware)\n  )\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from 'react';\n\nconst Stats = ({ stats }) => {\n    if (!stats) {\n        return <span className=\"stats\">Loading...</span>;\n    }\n    return (\n        <span className=\"stats\">\n            {stats.error && '🤯 Error!'}\n            {stats.isLoading && '🙄 Loading...'}\n            {stats.downloads !== null && `🤘 ${stats.downloads.total}`}\n        </span>\n    );\n};\n\nexport default Stats;","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { loadImages } from '../actions';\nimport Stats from './Stats';\n\nconst ImageGrid = ({ images, isLoading, error, loadImages, imageStats }) => {\n\n  useEffect(() => {\n    loadImages();\n  }, [loadImages]);\n\n  return (\n    <div className=\"content\">\n      <section className=\"grid\">\n        {images.map(image => (\n          <div\n            key={image.id}\n            className={`item item-${Math.ceil(\n                image.height / image.width,\n            )}`}\n          >\n            <Stats stats={imageStats[image.id]} />\n            <img\n                src={image.urls.small}\n                alt={image.user.username}\n            />\n          </div>\n        ))}\n      </section>\n      {error && <div className=\"error\">{JSON.stringify(error)}</div>}\n     \n      <button onClick={() => !isLoading && loadImages()}>Load Images</button>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({images, isLoading, error, imageStats}) => ({\n  images, isLoading, error, imageStats\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadImages: () => dispatch(loadImages())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageGrid);\n","import { Provider } from 'react-redux';\nimport Header from './components/Header';\nimport store from './store';\nimport ImageGrid from './components/ImageGrid'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <ImageGrid />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}